# Pivotal OSS Build Schema for Apache HTTP Server
#
# Copyright (c) 2017 Pivotal Software, Inc.
#
# Pivotal licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Makefile.gather : Gather source code packages or (source checkouts)
#                   for all packages into the source tree, and generate
#                   a version and directory name manifest
#
# BLD defines the build type: release - candidate - snapshot - bleed
#
# This makefile is run first from the source directory root, and must be
# performed only upon updates to the source packages. Makefile.prepare from
# the same directory should follow immediately if the manifest changes.

BLD=release

all: gather-linux-$(BLD)

pre-manifest:
	-mkdir pkgs 2>/dev/null
	echo Gathering $(BLD) Source Trees
	truncate -s0 $(BLD)-manifest-vars

gather-httpdtest-trunk: pre-manifest
	httpdtest_srcpath=https://svn.apache.org/repos/asf/httpd/test/framework/trunk && \
	if test ! -d httpdtest-trunk ; then \
	  svn co -q $$httpdtest_srcpath httpdtest-trunk; \
	else \
	  svn up -q httpdtest-trunk; \
	fi && \
	echo httpdtest httpdtest-trunk && \
	echo httpdtest_srcdir=httpdtest-trunk >>$(BLD)-manifest-vars && \
	echo httpdtest_ver=httpdtest-trunk >>$(BLD)-manifest-vars

gather-httpd-release: pre-manifest
	httpd_srcpath=https://www.apache.org/dist/httpd && \
	httpd_pkg=`wget -q -O - $$httpd_srcpath/ | sed 's#.*<a href="\(httpd-2\.4\.[0-9]*\.tar\.bz2\)".*#\1#p;d;'` && \
	httpd_ver=`echo $$httpd_pkg | sed 's#httpd-\(.*\)\.tar\.bz2#\1#;'` && \
	if test ! -f pkgs/$$httpd_pkg; then \
	  cd pkgs && \
	  wget -nv $$httpd_srcpath/$$httpd_pkg && \
	  wget -nv $$httpd_srcpath/$$httpd_pkg.asc && \
	  cd .. && \
          tar -xjf pkgs/$$httpd_pkg; \
	fi && \
	echo httpd     $$httpd_ver && \
	echo httpd_srcdir=httpd-$$httpd_ver >>$(BLD)-manifest-vars && \
	echo httpd_ver=$$httpd_ver >>$(BLD)-manifest-vars

gather-httpd-2xbranch: pre-manifest
	httpd_srcpath=https://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x && \
	if test ! -d httpd-2.4.x ; then \
	  svn co -q $$httpd_srcpath httpd-2.4.x; \
	else \
	  svn up -q httpd-2.4.x; \
	fi && \
	echo httpd     httpd-2.4.x && \
	echo httpd_srcdir=httpd-2.4.x >>$(BLD)-manifest-vars && \
	echo httpd_ver=2.4.x-dev >>$(BLD)-manifest-vars

gather-httpd-trunk: pre-manifest
	httpd_srcpath=https://svn.apache.org/repos/asf/httpd/httpd/trunk && \
	if test ! -d httpd-trunk ; then \
	  svn co -q $$httpd_srcpath httpd-trunk; \
	else \
	  svn up -q httpd-trunk; \
	fi && \
	echo httpd     httpd-trunk && \
	echo httpd_srcdir=httpd-trunk >>$(BLD)-manifest-vars && \
	echo httpd_ver=2.x-dev >>$(BLD)-manifest-vars

gather-apr-release: pre-manifest
	apr_srcpath=https://www.apache.org/dist/apr && \
	apr_pkg=`wget -q -O - $$apr_srcpath/ | sed 's#.*<a href="\(apr-1\.[0-9]\.[0-9]*\.tar\.bz2\)".*#\1#p;d;'` && \
	apr_ver=`echo $$apr_pkg | sed 's#apr-\(.*\)\.tar\.bz2#\1#;'` && \
	if test ! -f pkgs/$$apr_pkg; then \
	  cd pkgs && \
	  wget -nv $$apr_srcpath/$$apr_pkg && \
	  wget -nv $$apr_srcpath/$$apr_pkg.asc && \
	  cd .. && \
	  tar -xjf pkgs/$$apr_pkg; \
	fi && \
	echo apr       $$apr_ver && \
	echo apr_srcdir=apr-$$apr_ver >>$(BLD)-manifest-vars && \
	echo apr_ver=$$apr_ver >>$(BLD)-manifest-vars

gather-apr-1xbranch: pre-manifest
	apr_srcpath=https://svn.apache.org/repos/asf/apr/apr/branches/1.6.x && \
	if test ! -d apr-1.6-svn ; then \
	  svn co -q $$apr_srcpath apr-1.6-svn; \
	else \
	  svn up -q apr-1.6-svn; \
	fi && \
	echo apr       apr-1.6-svn && \
	echo apr_srcdir=apr-1.6-svn >>$(BLD)-manifest-vars && \
	echo apr_ver=1.6-dev >>$(BLD)-manifest-vars

gather-apr-trunk: pre-manifest
	apr_srcpath=https://svn.apache.org/repos/asf/apr/apr/trunk && \
	if test ! -d apr-trunk ; then \
	  svn co -q $$apr_srcpath apr-trunk; \
	else \
	  svn up -q apr-trunk; \
	fi && \
	echo apr       apr-trunk && \
	echo apr_srcdir=apr-trunk >>$(BLD)-manifest-vars && \
	echo apr_ver=2.x-dev >>$(BLD)-manifest-vars

gather-aprutil-release: pre-manifest
	aprutil_srcpath=https://www.apache.org/dist/apr && \
	aprutil_pkg=`wget -q -O - $$aprutil_srcpath/ | sed 's#.*<a href="\(apr-util-1\.[0-9]\.[0-9]*\.tar\.bz2\)".*#\1#p;d;'` && \
	aprutil_ver=`echo $$aprutil_pkg | sed 's#apr-util-\(.*\)\.tar\.bz2#\1#;'` && \
	if test ! -f pkgs/$$aprutil_pkg; then \
	  cd pkgs && \
	  wget -nv $$aprutil_srcpath/$$aprutil_pkg && \
	  wget -nv $$aprutil_srcpath/$$aprutil_pkg.asc && \
	  cd .. && \
	  tar -xjf pkgs/$$aprutil_pkg; \
	fi && \
	echo apr-util  $$aprutil_ver && \
	echo aprutil_srcdir=apr-util-$$aprutil_ver >>$(BLD)-manifest-vars && \
	echo aprutil_ver=$$aprutil_ver >>$(BLD)-manifest-vars

gather-aprutil-1xbranch: pre-manifest
	aprutil_srcpath=https://svn.apache.org/repos/asf/apr/apr-util/branches/1.6.x && \
	if test ! -d apr-util-1.6-svn ; then \
	  svn co -q $$aprutil_srcpath apr-util-1.6-svn; \
	else \
	  svn up -q apr-util-1.6-svn; \
	fi && \
	echo aprutil  apr-util-1.6-svn && \
	echo aprutil_srcdir=apr-util-1.6-svn >>$(BLD)-manifest-vars && \
	echo aprutil_ver=1.6-dev >>$(BLD)-manifest-vars

gather-aprutil-trunk: pre-manifest
#	NOOP - aprutil merges into apr

gather-openssl-release: pre-manifest
	openssl_srcpath=https://www.openssl.org/source && \
	openssl_pkg=`wget -q -O - $$openssl_srcpath/ | sed 's#.*<a href="\(openssl-1\.0\.2[a-z]*\.tar\.gz\)".*#\1#p;d;'` && \
	openssl_ver=`echo $$openssl_pkg | sed 's#openssl-\(.*\)\.tar\.gz#\1#;'` && \
	if test ! -f pkgs/$$openssl_pkg; then \
	  cd pkgs && \
	  wget -nv $$openssl_srcpath/$$openssl_pkg && \
	  wget -nv $$openssl_srcpath/$$openssl_pkg.asc && \
	  cd .. && \
	  tar -xzf pkgs/$$openssl_pkg; \
	fi && \
	echo openssl   $$openssl_ver && \
	echo openssl_srcdir=openssl-$$openssl_ver >>$(BLD)-manifest-vars && \
	echo openssl_ver=$$openssl_ver >>$(BLD)-manifest-vars

gather-openssl-110branch: pre-manifest
	openssl_srcpath=https://github.com/openssl/openssl && \
	if test ! -d openssl-1.1.0git ; then \
	  git clone -q $$openssl_srcpath.git openssl-1.1.0git && \
	  cd openssl-1.1.0git && git checkout OpenSSL_1_1_0-stable && cd ..; \
	else \
	  cd openssl-1.1.0git && git fetch -q && cd ..; \
	fi && \
	echo openssl   git-master && \
	echo openssl_srcdir=openssl-1.1.0git >>$(BLD)-manifest-vars && \
	echo openssl_ver=1.1.0-git >>$(BLD)-manifest-vars

gather-openssl-master: pre-manifest
	openssl_srcpath=https://github.com/openssl/openssl && \
	if test ! -d openssl-master ; then \
	  git clone -q $$openssl_srcpath.git openssl-master; \
	else \
	  cd openssl-master && git fetch -q && cd ..; \
	fi && \
	echo openssl   git-master && \
	echo openssl_srcdir=openssl-master >>$(BLD)-manifest-vars && \
	echo openssl_ver=1.x-git >>$(BLD)-manifest-vars

gather-nghttp2-release: pre-manifest
	nghttp2_srcpath=https://github.com/nghttp2/nghttp2/releases && \
	nghttp2_pkg=`wget --max-redirect=0 $$nghttp2_srcpath/latest/ 2>&1 | sed 's#Location: \(.*\)/tag/v\([^/]*\) \[following\]#\1/download/v\2/nghttp2-\2.tar.bz2#p;d;'` && \
	nghttp2_srcpath=`echo $$nghttp2_pkg | sed 's#/[^/]*$$##;'` && \
	nghttp2_pkg=`echo $$nghttp2_pkg | sed 's#.*/##;'` && \
	nghttp2_ver=`echo $$nghttp2_pkg | sed 's#nghttp2-\(.*\)\.tar\.bz2#\1#;'`&& \
	if test ! -f pkgs/$$nghttp2_pkg; then \
	  cd pkgs && \
	  wget -nv $$nghttp2_srcpath/$$nghttp2_pkg && \
	  cd .. && \
	  tar -xjf pkgs/$$nghttp2_pkg; \
	fi && \
	echo nghttp2   $$nghttp2_ver && \
	echo nghttp2_srcdir=nghttp2-$$nghttp2_ver >>$(BLD)-manifest-vars && \
	echo nghttp2_ver=$$nghttp2_ver >>$(BLD)-manifest-vars

gather-nghttp2-master: pre-manifest
	nghttp2_srcpath=https://github.com/tatsuhiro-t/nghttp2 && \
	if test ! -d nghttp2-master ; then \
	  git clone -q $$nghttp2_srcpath.git nghttp2-master; \
	else \
	  cd nghttp2-master && git fetch -q && cd ..; \
	fi && \
	echo nghttp2   git-master && \
	echo nghttp2_srcdir=nghttp2-master >>$(BLD)-manifest-vars && \
	echo nghttp2_ver=1.x-git >>$(BLD)-manifest-vars

gather-brotli-release: pre-manifest
	brotli_srcpath=https://github.com/google/brotli/releases && \
	brotli_pkg=`wget --max-redirect=0 $$brotli_srcpath/latest/ 2>&1 | sed 's#Location: \(.*\)/tag/v\([^/]*\) \[following\]#\1/download/v\2/brotli-\2.tar.gz#p;d;'` && \
	brotli_srcpath=`echo $$brotli_pkg | sed 's#/[^/]*$$##;'` && \
	brotli_pkg=`echo $$brotli_pkg | sed 's#.*/##;'` && \
	brotli_ver=`echo $$brotli_pkg | sed 's#brotli-\(.*\)\.tar\.gz#\1#;'` && \
	if test ! -f pkgs/$$brotli_pkg; then \
	  cd pkgs && \
	  wget -nv $$brotli_srcpath/$$brotli_pkg && \
	  cd .. && \
	  tar -xzf pkgs/$$brotli_pkg; \
	fi && \
	echo brotli    $$brotli_ver && \
	echo brotli_srcdir=Brotli-$$brotli_ver >>$(BLD)-manifest-vars && \
	echo brotli_ver=$$brotli_ver >>$(BLD)-manifest-vars

gather-brotli-master: pre-manifest
	brotli_srcpath=https://github.com/google/brotli && \
	if test ! -d Brotli-master ; then \
	  git clone -q $$brotli_srcpath.git Brotli-master; \
	else \
	  cd Brotli-master && git fetch -q && cd ..; \
	fi && \
	echo brotli    git-master && \
	echo brotli_srcdir=Brotli-master >>$(BLD)-manifest-vars && \
	echo brotli_ver=1.x-git >>$(BLD)-manifest-vars

gather-linux-release: gather-apr-release gather-aprutil-release \
		      gather-httpd-release gather-openssl-release \
		      gather-nghttp2-release gather-brotli-release \
		      gather-httpdtest-trunk
	mv $(BLD)-manifest-vars $(BLD)-manifest-vars.sav
	sort < $(BLD)-manifest-vars.sav > $(BLD)-manifest-vars
	rm $(BLD)-manifest-vars.sav

gather-linux-candidate: gather-apr-release gather-aprutil-release \
		      gather-httpd-release gather-openssl-release \
		      gather-nghttp2-release gather-brotli-master \
		      gather-httpdtest-trunk
	mv $(BLD)-manifest-vars $(BLD)-manifest-vars.sav
	sort < $(BLD)-manifest-vars.sav > $(BLD)-manifest-vars
	rm $(BLD)-manifest-vars.sav

gather-linux-snapshot: gather-apr-1xbranch gather-aprutil-1xbranch \
		      gather-httpd-2xbranch gather-openssl-110branch \
		      gather-nghttp2-master gather-brotli-master \
		      gather-httpdtest-trunk
	mv $(BLD)-manifest-vars $(BLD)-manifest-vars.sav
	sort < $(BLD)-manifest-vars.sav > $(BLD)-manifest-vars
	rm $(BLD)-manifest-vars.sav

gather-linux-bleed:   gather-apr-trunk \
		      gather-httpd-trunk gather-openssl-master \
		      gather-nghttp2-master gather-brotli-master \
		      gather-httpdtest-trunk
	mv $(BLD)-manifest-vars $(BLD)-manifest-vars.sav
	sort < $(BLD)-manifest-vars.sav > $(BLD)-manifest-vars
	rm $(BLD)-manifest-vars.sav

