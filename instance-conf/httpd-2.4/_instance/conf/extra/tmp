16c16
< IndexOptions FancyIndexing HTMLTable VersionSort
---
> IndexOptions FancyIndexing HTMLTable VersionSort Charset=UTF-8
21c21
< Alias /icons/ "@exp_iconsdir@/"
---
> Alias /icons/ "@exp_httpddir@/icons/"
23c23
< <Directory "@exp_iconsdir@">
---
> <Directory "@exp_httpddir@/icons">
15c15
< DavLockDB "@@ServerRoot@@/var/DavLock"
---
> DavLockDB "@exp_runtimedir@/dav.lock"
17c17
< Alias /uploads "@@ServerRoot@@/uploads"
---
> Alias /uploads "@ServerRoot@/uploads"
19c19
< <Directory "@@ServerRoot@@/uploads">
---
> <Directory "@ServerRoot@/uploads">
25,26c25,26
<     #   htdigest -c "@@ServerRoot@@/user.passwd" DAV-upload admin
<     AuthUserFile "@@ServerRoot@@/user.passwd"
---
>     #   htdigest -c "@rel_sysconfdir@/user.passwd" DAV-upload admin
>     AuthUserFile "@rel_sysconfdir@/user.passwd"
6c6
< #                   mod_info (for the server-info handler),
---
> #                   mod_info (for the server-info handler)
7a8,9
> #                   mod_bmx (and family, for the bmx handler)
> #                   mod_proxy_balancer (for the balancer-manager)
10,12c12,21
< # Allow server status reports generated by mod_status,
< # with the URL of https://servername/server-status
< # Change the ".example.com" to match your domain to enable.
---
> # ExtendedStatus controls whether Apache will generate "full" status
> # information (ExtendedStatus On) or just basic information (ExtendedStatus
> # Off) when the "server-status" handler is called. The default is Off.
> #
> ExtendedStatus On
> 
> #
> # Allow server status reports generated by mod_status, with the URL of
> # https://servername/server-status (requires that mod_status.c be loaded).
> # Add permitted/trusted IP addresses to the 127.0.0.1 list.
16,17c25
<     Require host .example.com
<     Require ip 127
---
>     Require ip 127.0.0.1 ::1
21,23c29,30
< # ExtendedStatus controls whether Apache will generate "full" status
< # information (ExtendedStatus On) or just basic information (ExtendedStatus
< # Off) when the "server-status" handler is called. The default is Off.
---
> # BMX manifiest inspection of the current server state
> # (Requires ExtendedStatus)
25c32,36
< #ExtendedStatus On
---
> 
> <Location /bmx>
>     SetHandler bmx-handler
>     Require ip 127.0.0.1 ::1
> </Location>
29,30c40,41
< #  https://servername/server-info (requires that mod_info.c be loaded).
< # Change the ".example.com" to match your domain to enable.
---
> # https://servername/server-info (requires that mod_info.c be loaded).
> # Add permitted/trusted IP addresses to the 127.0.0.1 list.
34,35c45,53
<     Require host .example.com
<     Require ip 127
---
>     Require ip 127.0.0.1 ::1
> </Location>
> 
> #
> # Allow the proxy balancer members to be inspected and adjusted
> #
> <Location /balancer-manager>
>     SetHandler balancer-manager
>     Require ip 127.0.0.1 ::1
11c11
< AliasMatch ^/manual(?:/(?:da|de|en|es|fr|ja|ko|pt-br|ru|tr|zh-cn))?(/.*)?$ "@exp_manualdir@$1"
---
> AliasMatch ^/manual(?:/(?:da|de|en|es|fr|ja|ko|pt-br|ru|tr|zh-cn))?(/.*)?$ "@exp_httpddir@/manual$1"
13c13
< <Directory "@exp_manualdir@">
---
> <Directory "@exp_httpddir@/manual">
23c23
<         ForceType "text/html; charset=utf-8"
---
>         ForceType text/html
12c12
<     PidFile "@rel_runtimedir@/httpd.pid"
---
>     PidFile "@exp_runtimedir@/httpd.pid"
47c47
<     MaxSpareThreads        250 
---
>     MaxSpareThreads        250
70,101d69
< # NetWare MPM
< # ThreadStackSize: Stack size allocated for each worker thread
< # StartThreads: Number of worker threads launched at server startup
< # MinSpareThreads: Minimum number of idle threads, to handle request spikes
< # MaxSpareThreads: Maximum number of idle threads
< # MaxThreads: Maximum number of worker threads alive at the same time
< # MaxConnectionsPerChild: Maximum  number of connections a thread serves. It
< #                         is recommended that the default value of 0 be set
< #                         for this directive on NetWare.  This will allow the
< #                         thread to continue to service requests indefinitely.
< <IfModule mpm_netware_module>
<     ThreadStackSize      65536
<     StartThreads           250
<     MinSpareThreads         25
<     MaxSpareThreads        250
<     MaxThreads            1000
<     MaxConnectionsPerChild   0
< </IfModule>
< 
< # OS/2 MPM
< # StartServers: Number of server processes to maintain
< # MinSpareThreads: Minimum number of idle threads per process, 
< #                  to handle request spikes
< # MaxSpareThreads: Maximum number of idle threads per process
< # MaxConnectionsPerChild: Maximum number of connections per server process
< <IfModule mpm_mpmt_os2_module>
<     StartServers             2
<     MinSpareThreads          5
<     MaxSpareThreads         10
<     MaxConnectionsPerChild   0
< </IfModule>
< 
114,119c82,83
< <IfModule !mpm_netware_module>
<     MaxMemFree            2048
< </IfModule>
< <IfModule mpm_netware_module>
<     MaxMemFree             100
< </IfModule>
---
> MaxMemFree            2048
> 
18c18,19
< # @exp_errordir@/include/ files and copying them to /your/include/path/, 
---
> # "@exp_httpddir@/error/include/"
> # files and copying them to /your/include/path/, 
23c24
< Alias /error/ "@exp_errordir@/"
---
> Alias /error/ "@exp_httpddir@/error/"
25c26
< <Directory "@exp_errordir@">
---
> <Directory "@exp_httpddir@/error">
16,30c16
< # Configure one or more sources to seed the PRNG of the SSL library.
< # The seed data should be of good random quality.
< # WARNING! On some platforms /dev/random blocks if not enough entropy
< # is available. This means you then cannot use the /dev/random device
< # because it would lead to very long connection times (as long as
< # it requires to make more entropy available). But usually those
< # platforms additionally provide a /dev/urandom device which doesn't
< # block. So, if available, use this one instead. Read the mod_ssl User
< # Manual for more details.
< #
< #SSLRandomSeed startup file:/dev/random  512
< #SSLRandomSeed startup file:/dev/urandom 512
< #SSLRandomSeed connect file:/dev/random  512
< #SSLRandomSeed connect file:/dev/urandom 512
< 
---
> # See httpd.conf
34c20,23
< # standard HTTP port (see above) and to the HTTPS port
---
> # standard HTTP port (see httpd.conf) and to the HTTPS port
> #
> # Note: Configurations that use IPv6 but not IPv4-mapped addresses need two
> #       Listen directives: "Listen [::]:@SSLPort@" and "Listen 0.0.0.0:@SSLPort@"
36c25
< Listen @@SSLPort@@
---
> Listen @SSLPort@ https
91,92c80,83
< #SSLSessionCache         "dbm:@exp_runtimedir@/ssl_scache"
< SSLSessionCache        "shmcb:@exp_runtimedir@/ssl_scache(512000)"
---
> #   Ensure @exp_runtimedir@/safe/ is accessible or readable
> #   only by the @User@ httpd is running as.
> #SSLSessionCache        "dbm:@exp_runtimedir@/safe/ssl_scache"
> SSLSessionCache         "shmcb:@exp_runtimedir@/safe/ssl_scache(512000)"
109c100
< #SSLStaplingCache "shmcb:@exp_runtimedir@/ssl_stapling(32768)"
---
> #SSLStaplingCache "shmcb:@exp_runtimedir@/safe/ssl_stapling(32768)"
121c112
< <VirtualHost _default_:@@SSLPort@@>
---
> <VirtualHost _default_:@SSLPort@>
125,128c116,119
< ServerName www.example.com:@@SSLPort@@
< ServerAdmin you@example.com
< ErrorLog "@exp_logfiledir@/error_log"
< TransferLog "@exp_logfiledir@/access_log"
---
> ServerName @HostName@:@SSLPort@
> ServerAdmin @ServerAdmin@
> ErrorLog "@rel_logfiledir@/error.log"
> TransferLog "@rel_logfiledir@/access.log"
135,146c126,132
< #   Point SSLCertificateFile at a PEM encoded certificate.  If
< #   the certificate is encrypted, then you will be prompted for a
< #   pass phrase.  Note that a kill -HUP will prompt again.  Keep
< #   in mind that if you have both an RSA and a DSA certificate you
< #   can configure both in parallel (to also allow the use of DSA
< #   ciphers, etc.)
< #   Some ECC cipher suites (https://www.ietf.org/rfc/rfc4492.txt)
< #   require an ECC certificate which can also be configured in
< #   parallel.
< SSLCertificateFile "@exp_sysconfdir@/server.crt"
< #SSLCertificateFile "@exp_sysconfdir@/server-dsa.crt"
< #SSLCertificateFile "@exp_sysconfdir@/server-ecc.crt"
---
> #   Point SSLCertificateFile at a PEM encoded certificate.
> #   If you have a combination of RSA, DSA and ECC certificates,
> #   you may configure these in parallel, and that certificate
> #   applicable to the negotated cipher will be used.
> SSLCertificateFile "ssl/@HostName@.crt"
> #SSLCertificateFile "ssl/@HostName@-dsa.crt"
> #SSLCertificateFile "ssl/@HostName@-ecc.crt"
149,156c135,144
< #   If the key is not combined with the certificate, use this
< #   directive to point at the key file.  Keep in mind that if
< #   you've both a RSA and a DSA private key you can configure
< #   both in parallel (to also allow the use of DSA ciphers, etc.)
< #   ECC keys, when in use, can also be configured in parallel
< SSLCertificateKeyFile "@exp_sysconfdir@/server.key"
< #SSLCertificateKeyFile "@exp_sysconfdir@/server-dsa.key"
< #SSLCertificateKeyFile "@exp_sysconfdir@/server-ecc.key"
---
> #   When the private key is not combined in an SSLCertificateFile,
> #   this directive is used to specify that seperate key file.
> #   If the certificate key is encrypted, the server freezes during
> #   startup and upon each graceful restart, prompting for entry
> #   of the passphrase (see SSLPassPhraseDialog directive).
> #   If you have a combination of RSA, DSA and ECC private keys,
> #   you may configure these in parallel.
> SSLCertificateKeyFile "ssl/@HostName@.key"
> #SSLCertificateKeyFile "ssl/@HostName@-dsa.key"
> #SSLCertificateKeyFile "ssl/@HostName@-ecc.key"
165c153
< #SSLCertificateChainFile "@exp_sysconfdir@/server-ca.crt"
---
> #SSLCertificateChainFile "ssl/@HostName@-ca.crt"
174,175c162,163
< #SSLCACertificatePath "@exp_sysconfdir@/ssl.crt"
< #SSLCACertificateFile "@exp_sysconfdir@/ssl.crt/ca-bundle.crt"
---
> #SSLCACertificatePath "ssl/ssl.crt"
> #SSLCACertificateFile "ssl/ca-bundle.crt"
180a169,175
> #   Note: Inside SSLCARevocationPath you need hash symlinks
> #         to point to the certificate files.  OpenSSL offers
> #         a c_rehash script to update this directory layout
> #         after changes to the directory contents.
> #SSLCARevocationPath "ssl/ssl.crl"
> #SSLCARevocationFile "ssl/ca-bundle.crl"
> 
183,187d177
< #   Note: Inside SSLCARevocationPath you need hash symlinks
< #         to point to the certificate files. Use the provided
< #         Makefile to update the hash symlinks after changes.
< #SSLCARevocationPath "@exp_sysconfdir@/ssl.crl"
< #SSLCARevocationFile "@exp_sysconfdir@/ssl.crl/ca-bundle.crl"
203,204c193,194
< #   "openssl srp -srpvfile @exp_sysconfdir@/passwd.srpv -add username"
< #SSLSRPVerifierFile "@exp_sysconfdir@/passwd.srpv"
---
> #   "openssl srp -srpvfile @rel_sysconfdir@/passwd.srpv -add username"
> #SSLSRPVerifierFile "@rel_sysconfdir@/passwd.srpv"
287c277
< CustomLog "@exp_logfiledir@/ssl_request_log" \
---
> CustomLog "@rel_logfiledir@/ssl_request.log" \
290c280,281
< </VirtualHost>                                  
---
> </VirtualHost>
> 
0a1
> #
23c24
< <VirtualHost *:@@Port@@>
---
> <VirtualHost *:@Port@>
25,29c26,30
<     DocumentRoot "@@ServerRoot@@/docs/dummy-host.example.com"
<     ServerName dummy-host.example.com
<     ServerAlias www.dummy-host.example.com
<     ErrorLog "@rel_logfiledir@/dummy-host.example.com-error_log"
<     CustomLog "@rel_logfiledir@/dummy-host.example.com-access_log" common
---
>     DocumentRoot "@ServerRoot@/docs/dummy-host.example.com"
>     ServerName www.dummy-host.example.com
>     ServerAlias dummy-host.example.com
>     ErrorLog "@rel_logfiledir@/dummy-host.example.com-error.log"
>     CustomLog "@rel_logfiledir@/dummy-host.example.com-access.log" common
32c33
< <VirtualHost *:@@Port@@>
---
> <VirtualHost *:@Port@>
34,37c35,38
<     DocumentRoot "@@ServerRoot@@/docs/dummy-host2.example.com"
<     ServerName dummy-host2.example.com
<     ErrorLog "@rel_logfiledir@/dummy-host2.example.com-error_log"
<     CustomLog "@rel_logfiledir@/dummy-host2.example.com-access_log" common
---
>     DocumentRoot "@ServerRoot@/docs/dummy-host2.example.com"
>     ServerName www.dummy-host2.example.com
>     ErrorLog "@rel_logfiledir@/dummy-host2.example.com-error.log"
>     CustomLog "@rel_logfiledir@/dummy-host2.example.com-access.log" common
13d12
< # LoadFile	/usr/lib/libxml2.so
17,23d15
< # For Windows (I don't know if there's a standard path for the libraries)
< # LoadFile	C:/path/zlib.dll
< # LoadFile	C:/path/iconv.dll
< # LoadFile	C:/path/libxml2.dll
< # LoadModule	proxy_html_module	modules/mod_proxy_html.so
< # LoadModule	xml2enc_module		modules/mod_xml2enc.so
< # 
